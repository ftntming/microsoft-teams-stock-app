{"version":3,"sources":["webpack/bootstrap 720a2379c7f7a57b82d3","external \"dotenv\"","external \"request\"","/Users/richdizz/Projects/Teams/Stocks/src/app/controllers/stockSymbolController.ts","external \"mongodb\"","/Users/richdizz/Projects/Teams/Stocks/src/app/controllers/stockQuoteController.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/models/stockSymbol.ts","external \"botbuilder-teams\"","external \"csv-parse\"","external \"memory-cache\"","/Users/richdizz/Projects/Teams/Stocks/src/app/server.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/controllers/StockSymbolController.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/controllers/portfolioAccountController.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/models/PortfolioAccount.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/models/PortfolioItem.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/models/StockQuote.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/models/dateStat.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/models/portfolioAccount.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/models/stockQuote.ts","/Users/richdizz/Projects/Teams/Stocks/src/app/stocks.ts","external \"applicationinsights\"","external \"body-parser\"","external \"botbuilder\"","external \"express\"","external \"http\"","external \"morgan\"","external \"path\""],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 720a2379c7f7a57b82d3","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"request\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request\"\n// module id = 1\n// module chunks = 0","require('dotenv').config();\n\nimport {StockSymbol} from '../models/stockSymbol';\nimport * as parse from 'csv-parse';\nimport * as request from 'request';\nimport * as cache from 'memory-cache';\n\nexport class StockSymbolController {\n    private static getSymbolsForExchange(exchange:string) {\n        return new Promise((resolve, reject) => {\n            let array = new Array<StockSymbol>();\n            request.get(`http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=${exchange}&render=download`, {}, (err, resp, body) => {\n                // parse the results\n                parse(resp.body, {}, (parse_error, output) => {\n                    if (parse_error)\n                        reject(parse_error);\n                    else {\n                        for (var i = 0; i < output.length; i++) {\n                            array.push(new StockSymbol(output[i][0], output[i][1]));\n                        }\n\n                        resolve(array);\n                    }\n                });\n            });\n        });\n    }\n\n    static getNameBySymbol(symbols:Array<StockSymbol>, symbol:string) : string {\n        var name:string = '';\n        for (var i = 0; i < symbols.length; i++) {\n            if (symbols[i].symbol === symbol){\n                name = symbols[i].company_name;\n                break;\n            }\n        }\n        return name;\n    }\n\n    static getSymbols() {\n        return new Promise((resolve, reject) => {\n            // first try to pull from cache\n            let symbols = cache.get('symbols');\n            if (symbols)\n                resolve(symbols);\n            else {\n                // first get all nasdaq symbols\n                let array = new Array<StockSymbol>();\n                StockSymbolController.getSymbolsForExchange('nasdaq').then((nasdaq:Array<StockSymbol>) => {\n                    nasdaq.splice(0, 1); //remove header\n                    array = array.concat(nasdaq);\n                    \n                    // next get all nyse symbols\n                    StockSymbolController.getSymbolsForExchange('nyse').then((nyse:Array<StockSymbol>) => {\n                        nyse.splice(0, 1); //remove header\n                        array = array.concat(nyse);\n\n                        // sort the array\n                        var sortedArray:Array<StockSymbol> = array.sort((o1:StockSymbol, o2:StockSymbol) => {\n                            if (o1.symbol > o2.symbol)\n                                return 1;\n                            else if (o1.symbol < o2.symbol)\n                                return -1;\n                            else\n                                return 0;\n                        });\n\n                        // cache the results for an hour and then return\n                        cache.put('symbols', sortedArray, 3600000);\n                        resolve(sortedArray);\n                    });\n                });\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controllers/stockSymbolController.ts","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 3\n// module chunks = 0","require('dotenv').config();\n\nimport {StockQuote} from '../models/stockQuote';\nimport {DateStat} from '../models/dateStat';\nimport {StockSymbol} from '../models/stockSymbol';\nimport {StockSymbolController} from './stockSymbolController';\nimport * as request from 'request';\n\nexport class StockQuoteController {\n    static getQuoteSvc(req:any, res:any) {\n        if (req.params.symbol) {\n            let symbol = req.params.symbol;\n            StockQuoteController.getQuote(symbol, req.query.showdetail).then((quote:StockQuote) => {\n                res.json(quote);\n            }, (err:any) => {\n                res.status(500).send({ error: err });\n            });\n        }\n        else\n            res.status(500).send({ error: 'No symbol provided!' });\n    }\n\n    static getQuote(symbol:string, showdetail?:boolean) {\n        return new Promise((resolve, reject) => {\n            if (symbol) {\n                StockSymbolController.getSymbols().then((symbols:Array<StockSymbol>) => {\n                    let uri = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&apikey=${process.env.STOCK_API_KEY}`;\n                    request.get(uri, {}, (err, resp, body) => {\n                        if (!err) {\n                            var json = JSON.parse(body);\n                            if (!json['Error Message']) {\n                                let quote = new StockQuote();\n                                quote.symbol = symbol;\n                                quote.name = StockSymbolController.getNameBySymbol(symbols, symbol);\n                                let index = 0;\n                                for (var key in json['Time Series (Daily)']) {\n                                    if (index == 0) {\n                                        quote.current = json['Time Series (Daily)'][key]['4. close'];\n                                        quote.volume = json['Time Series (Daily)'][key]['5. volume'];\n                                    }\n                                    else if (index == 1) {\n                                        quote.prev_close = json['Time Series (Daily)'][key]['4. close'];\n                                        break;\n                                    }\n                                    index++;\n                                };\n\n                                quote.curr_change = quote.current - quote.prev_close;\n                                quote.pct_change = (quote.current - quote.prev_close) / quote.prev_close;\n                                \n                                // check if we should include the daily details\n                                if (showdetail) {\n                                    var dates = Object.keys(json['Time Series (Daily)']);\n                                    for (var i = 0; i < dates.length; i++) {\n                                        var item = json['Time Series (Daily)'][dates[i]];\n                                        var stat:DateStat = new DateStat();\n                                        stat.close = item['4. close'];\n                                        stat.high = item['2. high'];\n                                        stat.low = item['3. low'];\n                                        stat.date = dates[i];\n                                        quote.stats.push(stat);\n                                    }\n                                }\n                                \n                                resolve(quote);\n                            }\n                            else {\n                                reject(json['Error Message'])\n                            }\n                        }\n                        else {\n                            reject(err);\n                        }\n                    });\n                }, (err) => {\n                    reject(err);\n                });\n            }\n            else\n                reject('No symbol provided!');\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controllers/stockQuoteController.ts","export class StockSymbol {\n    constructor(s:string, n:string) {\n        this.symbol = s;\n        this.company_name = n;\n    }\n\n    symbol:string;\n    company_name:string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/stockSymbol.ts","module.exports = require(\"botbuilder-teams\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botbuilder-teams\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"csv-parse\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"csv-parse\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"memory-cache\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"memory-cache\"\n// module id = 8\n// module chunks = 0","require('dotenv').config();\r\nimport * as Express from 'express';\r\nimport * as bodyParser from 'body-parser';\r\nimport * as session from 'express-session';\r\nimport * as https from 'https';\r\nimport * as http from 'http';\r\nimport * as path from 'path';\r\nimport * as morgan from 'morgan';\r\nimport * as builder from 'botbuilder';\r\nimport * as teams from 'botbuilder-teams';\r\nimport { stocks } from './stocks';\r\nimport { PortfolioAccountController } from './controllers/portfolioAccountController';\r\nimport { StockQuoteController } from './controllers/stockQuoteController';\r\nimport { StockSymbolController } from './controllers/stockSymbolController';\r\n\r\nlet express = Express();\r\nlet port = process.env.port || process.env.PORT || 3008;\r\n\r\nexpress.use(bodyParser.json());\r\nexpress.use(morgan('tiny'));\r\nexpress.use('/scripts', Express.static(path.join(__dirname, 'scripts')));\r\nexpress.use('/assets', Express.static(path.join(__dirname, 'web/assets')));\r\n\r\n\r\n// Bot hosting \r\nlet botSettings: builder.IChatConnectorSettings = {\r\n    appId: process.env.MICROSOFT_APP_ID,\r\n    appPassword: process.env.MICROSOFT_APP_PASSWORD\r\n};\r\n\r\n// Setup the Bot API controller\r\nlet bot = new stocks(new teams.TeamsChatConnector(botSettings));\r\nexpress.post('/api/messages', bot.Connector.listen());\r\n\r\n// Setup API controllers for the app\r\nexpress.get('/api/account', PortfolioAccountController.getAccountSvc);\r\nexpress.delete('/api/account/:id/:symbol', PortfolioAccountController.deleteStockSvc);\r\nexpress.get('/api/quote/:symbol', StockQuoteController.getQuoteSvc);\r\n\r\n// Load symbols into cache\r\nStockSymbolController.getSymbols().then(function(data) {\r\n    // Do nothing...just for cache\r\n});\r\n\r\n// This is used to prevent your tabs from being embedded in other systems than Microsoft Teams\r\nexpress.use(function (req: any, res: any, next: any) {\r\n    res.setHeader(\"Content-Security-Policy\", \"frame-ancestors teams.microsoft.com *.teams.microsoft.com *.skype.com\");\r\n    res.setHeader(\"X-Frame-Options\", \"ALLOW-FROM https://teams.microsoft.com/.\"); // IE11\r\n    return next();\r\n});\r\n\r\n// Tabs (protected by the above)\r\nexpress.use('/\\*Tab.html', (req: any, res: any, next: any) => {\r\n    res.sendFile(path.join(__dirname, `web${req.baseUrl}`));\r\n});\r\nexpress.use('/\\*Config.html', (req: any, res: any, next: any) => {\r\n    res.sendFile(path.join(__dirname, `web${req.baseUrl}`));\r\n});\r\nexpress.use('/\\*Remove.html', (req: any, res: any, next: any) => {\r\n    res.sendFile(path.join(__dirname, `web${req.baseUrl}`));\r\n});\r\n\r\n// Fallback\r\nexpress.use(function (req: any, res: any, next: any) {\r\n    res.removeHeader(\"Content-Security-Policy\")\r\n    res.removeHeader(\"X-Frame-Options\"); // IE11\r\n    return next();\r\n});\r\n\r\nexpress.use('/', Express.static(path.join(__dirname, 'web/'), {\r\n    index: 'index.html'\r\n}));\r\n\r\nexpress.set('port', port);\r\nhttp.createServer(express).listen(port, (err: any) => {\r\n    if (err) {\r\n        return console.error(err);\r\n    }\r\n    console.log(`Server running on ${port}`);\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/server.ts","require('dotenv').config();\n\nimport {StockSymbol} from '../models/stockSymbol';\nimport * as parse from 'csv-parse';\nimport * as request from 'request';\nimport * as cache from 'memory-cache';\n\nexport class StockSymbolController {\n    private static getSymbolsForExchange(exchange:string) {\n        return new Promise((resolve, reject) => {\n            let array = new Array<StockSymbol>();\n            request.get(`http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=${exchange}&render=download`, {}, (err, resp, body) => {\n                // parse the results\n                parse(resp.body, {}, (parse_error, output) => {\n                    if (parse_error)\n                        reject(parse_error);\n                    else {\n                        for (var i = 0; i < output.length; i++) {\n                            array.push(new StockSymbol(output[i][0], output[i][1]));\n                        }\n\n                        resolve(array);\n                    }\n                });\n            });\n        });\n    }\n\n    static getNameBySymbol(symbols:Array<StockSymbol>, symbol:string) : string {\n        var name:string = '';\n        for (var i = 0; i < symbols.length; i++) {\n            if (symbols[i].symbol === symbol){\n                name = symbols[i].company_name;\n                break;\n            }\n        }\n        return name;\n    }\n\n    static getSymbols() {\n        return new Promise((resolve, reject) => {\n            // first try to pull from cache\n            let symbols = cache.get('symbols');\n            if (symbols)\n                resolve(symbols);\n            else {\n                // first get all nasdaq symbols\n                let array = new Array<StockSymbol>();\n                StockSymbolController.getSymbolsForExchange('nasdaq').then((nasdaq:Array<StockSymbol>) => {\n                    nasdaq.splice(0, 1); //remove header\n                    array = array.concat(nasdaq);\n                    \n                    // next get all nyse symbols\n                    StockSymbolController.getSymbolsForExchange('nyse').then((nyse:Array<StockSymbol>) => {\n                        nyse.splice(0, 1); //remove header\n                        array = array.concat(nyse);\n\n                        // sort the array\n                        var sortedArray:Array<StockSymbol> = array.sort((o1:StockSymbol, o2:StockSymbol) => {\n                            if (o1.symbol > o2.symbol)\n                                return 1;\n                            else if (o1.symbol < o2.symbol)\n                                return -1;\n                            else\n                                return 0;\n                        });\n\n                        // cache the results for an hour and then return\n                        cache.put('symbols', sortedArray, 3600000);\n                        resolve(sortedArray);\n                    });\n                });\n            }\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controllers/StockSymbolController.ts","require('dotenv').config();\n\nimport * as mongodb from 'mongodb';\nimport {PortfolioAccount} from '../models/portfolioAccount';\nimport {StockSymbol} from '../models/StockSymbol';\nimport {StockSymbolController} from '../controllers/stockSymbolController';\n\nexport class PortfolioAccountController {\n    static getAccountSvc(req:any, res:any) {\n        if (req.query.id) {\n            PortfolioAccountController.getAccount(req.query.id).then((acct:any) => {\n                res.json(acct);\n            }, (err:any) => {\n                let acct:PortfolioAccount = new PortfolioAccount();\n                acct.id = req.query.id;\n                res.json(acct);\n            });\n        }\n        else\n            res.status(500).send({ error: 'No id provided!' });\n    }\n    \n    static getAccount(id:string) {\n        return new Promise((resolve, reject) => {\n            if (id) {\n                StockSymbolController.getSymbols().then((data:Array<StockSymbol>) => {\n                    var mongoClient = mongodb.MongoClient;\n                    mongoClient.connect(<string>process.env.MONGO_CONN_STRING, function (err:any, db:any) {                    \n                        var cursor = db.collection('accounts').find({ 'id': id });\n                        cursor.next(function (e:any, r:any) {\n                            if (r) {\n                                // return the account\n                                for (var i = 0; i < r.stocks.length; i++)\n                                    r.stocks[i].name = StockSymbolController.getNameBySymbol(data, r.stocks[i].symbol);\n                                resolve(r);\n                            }\n                            else {\n                                // return null\n                                reject('No account found!');\n                            }\n                        });\n                        db.close();\n                    });\n                });\n            }\n            else\n                reject('No id provided!');\n        });\n    }\n\n    static deleteStockSvc(req:any, res:any) {\n        var mongoClient = mongodb.MongoClient;\n        mongoClient.connect(<string>process.env.MONGO_CONN_STRING, function (err:any, db:any) {                    \n            var cursor = db.collection('accounts').find({ 'id': req.params.id });\n            cursor.next(function (e:any, r:any) {\n                if (r) {\n                    // return the account\n                    for (var i = 0; i < r.stocks.length; i++) {\n                        if (r.stocks[i].symbol === req.params.symbol) {\n                            r.stocks.splice(i, 1);\n                            var x = db.collection('accounts').updateOne({ 'id': r.id }, r);\n                            res.status(200).send();\n                            break;\n                        }\n                    }\n                    db.close();\n                }\n                else {\n                    // return null\n                    res.status(500).send({ error: 'Database connection error!' });\n                    db.close();\n                }\n            });\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/controllers/portfolioAccountController.ts","require('dotenv').config();\n\nimport * as mongodb from 'mongodb';\nimport * as builder from 'botbuilder';\nimport * as teams from 'botbuilder-teams';\nimport {PortfolioItem} from './portfolioItem';\n\nexport class PortfolioAccount {\n    constructor() {\n        this.stocks = new Array<PortfolioItem>();\n    }\n\n    id:string;\n    alt_id:string;\n    name:string;\n    stocks:Array<PortfolioItem>;\n\n    update() {\n        // update the user in the database\n        let context = this;\n        var mongoClient = mongodb.MongoClient;\n        mongoClient.connect(<string>process.env.MONGO_CONN_STRING, (err:any, db:any) => {\n            var x = db.collection('accounts').updateOne({ 'id': context.id }, context);\n            db.close();\n        });\n    }\n\n    static ensureAccount(session:builder.Session) {\n        return new Promise((resolve, reject) => {\n            // first fetch member list to get the user's profile (for 1:1 this will just be the user)\n            var connector:teams.TeamsChatConnector = <teams.TeamsChatConnector>session.connector;\n            connector.fetchMemberList(\n                (<any>session.message.address).serviceUrl,\n                (session.message.address.conversation) ? session.message.address.conversation.id : '',\n                session.message.sourceEvent.tenant.id, (err:any, result:any) => {\n                    if (err) {\n                        reject('Error fetching members');\n                    }\n                    else {\n                        let user:any;\n\n                        // loop through the users and find the right match\n                        for (var i = 0; i < result.length; i++) {\n                            if (result[i].id == session.message.user.id) {\n                                user = result[i];\n                                break;\n                            }\n                        }\n                        \n                        // initialize the entity\n                        var entity:PortfolioAccount = new PortfolioAccount();\n                        \n                        // check if this is an add for Team channel or individual\n                        if (session.message.sourceEvent.teamsChannelId) {\n                            // this is a Team channel\n                            entity.id = session.message.sourceEvent.teamsChannelId;\n                            entity.alt_id = session.message.sourceEvent.teamsTeamId;\n                        }\n                        else {\n                            //this is an individual\n                            entity.id = user.userPrincipalName;\n                            entity.alt_id = user.id;\n                            entity.name = user.name;\n                        }\n\n                        // ensure user is in database\n                        var mongoClient = mongodb.MongoClient;\n                        mongoClient.connect(<string>process.env.MONGO_CONN_STRING, (err:any, db:any) => {\n                            // try to locate the user\n                            var cursor = db.collection('accounts').find( { \"id\": entity.id } );\n                            cursor.next((e:any, r:any) => {\n                                if (r) {\n                                    // user exists so just populate stocks and resolve\n                                    entity.stocks = r.stocks;\n                                    resolve(entity);\n                                    db.close();\n                                }\n                                else {\n                                    // need to create a placeholder for the user\n                                    var x = db.collection('accounts').insertOne(entity);\n                                    resolve(entity);\n                                    db.close();\n                                }\n                            });\n                        });\n                    }\n                }\n            );\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/PortfolioAccount.ts","export class PortfolioItem {\n    constructor(symbol?:string, user?:any, date?:Date) {\n        if (symbol)\n            this.symbol = symbol;\n        if (date)\n            this.added_date = date;\n        if (user) {\n            this.added_by_id = <string>user.id;\n            this.added_by_name = <string>user.name;\n        }\n    }\n\n    symbol:string;\n    added_date:Date;\n    added_by_id:string;\n    added_by_name:string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/PortfolioItem.ts","import {DateStat} from './dateStat';\n\nexport class StockQuote {\n    constructor() {\n        this.stats = new Array<DateStat>();\n    }\n\n    symbol:string;\n    name:string;\n    current:number;\n    prev_close:number;\n    curr_change:number;\n    pct_change:number;\n    volume:number;\n    stats:Array<DateStat>;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/StockQuote.ts","export class DateStat {\n    constructor() {\n    }\n\n    date:string;\n    high:number;\n    low:number;\n    close:number;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/dateStat.ts","require('dotenv').config();\n\nimport * as mongodb from 'mongodb';\nimport * as builder from 'botbuilder';\nimport * as teams from 'botbuilder-teams';\nimport {PortfolioItem} from './portfolioItem';\n\nexport class PortfolioAccount {\n    constructor() {\n        this.stocks = new Array<PortfolioItem>();\n    }\n\n    id:string;\n    alt_id:string;\n    name:string;\n    stocks:Array<PortfolioItem>;\n\n    update() {\n        // update the user in the database\n        let context = this;\n        var mongoClient = mongodb.MongoClient;\n        mongoClient.connect(<string>process.env.MONGO_CONN_STRING, (err:any, db:any) => {\n            var x = db.collection('accounts').updateOne({ 'id': context.id }, context);\n            db.close();\n        });\n    }\n\n    static ensureAccount(session:builder.Session) {\n        return new Promise((resolve, reject) => {\n            // first fetch member list to get the user's profile (for 1:1 this will just be the user)\n            var connector:teams.TeamsChatConnector = <teams.TeamsChatConnector>session.connector;\n            connector.fetchMemberList(\n                (<any>session.message.address).serviceUrl,\n                (session.message.address.conversation) ? session.message.address.conversation.id : '',\n                session.message.sourceEvent.tenant.id, (err:any, result:any) => {\n                    if (err) {\n                        reject('Error fetching members');\n                    }\n                    else {\n                        let user:any;\n\n                        // loop through the users and find the right match\n                        for (var i = 0; i < result.length; i++) {\n                            if (result[i].id == session.message.user.id) {\n                                user = result[i];\n                                break;\n                            }\n                        }\n                        \n                        // initialize the entity\n                        var entity:PortfolioAccount = new PortfolioAccount();\n                        \n                        // check if this is an add for Team channel or individual\n                        if (session.message.sourceEvent.teamsChannelId) {\n                            // this is a Team channel\n                            entity.id = session.message.sourceEvent.teamsChannelId;\n                            entity.alt_id = session.message.sourceEvent.teamsTeamId;\n                        }\n                        else {\n                            //this is an individual\n                            entity.id = user.userPrincipalName;\n                            entity.alt_id = user.id;\n                            entity.name = user.name;\n                        }\n\n                        // ensure user is in database\n                        var mongoClient = mongodb.MongoClient;\n                        mongoClient.connect(<string>process.env.MONGO_CONN_STRING, (err:any, db:any) => {\n                            // try to locate the user\n                            var cursor = db.collection('accounts').find( { \"id\": entity.id } );\n                            cursor.next((e:any, r:any) => {\n                                if (r) {\n                                    // user exists so just populate stocks and resolve\n                                    entity.stocks = r.stocks;\n                                    resolve(entity);\n                                    db.close();\n                                }\n                                else {\n                                    // need to create a placeholder for the user\n                                    var x = db.collection('accounts').insertOne(entity);\n                                    resolve(entity);\n                                    db.close();\n                                }\n                            });\n                        });\n                    }\n                }\n            );\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/portfolioAccount.ts","import {DateStat} from './dateStat';\n\nexport class StockQuote {\n    constructor() {\n        this.stats = new Array<DateStat>();\n    }\n\n    symbol:string;\n    name:string;\n    current:number;\n    prev_close:number;\n    curr_change:number;\n    pct_change:number;\n    volume:number;\n    stats:Array<DateStat>;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/stockQuote.ts","import * as appinsights from 'applicationinsights';\r\nappinsights.setup(\"4b67eebf-bfc2-427d-a795-f808b2fa3faa\");\r\nappinsights.start();\r\n\r\nrequire('dotenv').config();\r\nimport * as builder from 'botbuilder';\r\nimport * as request from 'request';\r\nimport { StockQuote } from './models/StockQuote';\r\nimport { StockQuoteController } from './controllers/stockQuoteController';\r\nimport { StockSymbol } from './models/StockSymbol';\r\nimport { StockSymbolController } from './controllers/StockSymbolController';\r\nimport { PortfolioAccount } from './models/PortfolioAccount';\r\nimport { PortfolioItem } from './models/PortfolioItem';\r\nimport * as mongodb from 'mongodb';\r\nimport * as teams from 'botbuilder-teams';\r\nimport * as parse from 'csv-parse';\r\n\r\n/**\r\n * Implementation for Stocks\r\n */\r\nexport class stocks {\r\n    public readonly Connector: teams.TeamsChatConnector;\r\n    private readonly universalBot: builder.UniversalBot;\r\n\r\n    /**\r\n     * The constructor\r\n     * @param connector \r\n     */\r\n    constructor(connector: teams.TeamsChatConnector) {\r\n        this.Connector = connector;\r\n        this.universalBot = new builder.UniversalBot(this.Connector);\r\n\r\n        // Install sendTyping as middleware\r\n        this.universalBot.use({\r\n            botbuilder: (session, next) => {\r\n                session.sendTyping();\r\n                next();\r\n            }\r\n        });\r\n\t\t\r\n        // Add dialogs here\r\n        this.universalBot.dialog('/', this.defaultDialog);\r\n        this.universalBot.dialog('/help', this.helpDialog);\r\n        this.universalBot.dialog('/add', this.addDialog);\r\n        this.universalBot.dialog('/remove', this.removeDialog);\r\n        this.universalBot.dialog('/quote', this.quoteDialog);\r\n        this.universalBot.dialog('/list', this.listDialog);\r\n \r\n        // Handle conversationUpdate events\r\n        this.universalBot.on('conversationUpdate', (activity: any) => {\r\n            if (activity.sourceEvent && \r\n                activity.sourceEvent.eventType == 'teamMemberAdded' &&\r\n                activity.membersAdded[0].id == activity.address.bot.id) {\r\n                var botmessage = new builder.Message()\r\n                    .address(activity.address)\r\n                    .text(stocks.getHelpMsg());\r\n\r\n                this.universalBot.send(botmessage, function(err) {});\r\n            }\r\n        });\r\n\r\n        // Handle compose extension for searching stocks\r\n        this.Connector.onQuery('searchCmd',\r\n            (event: builder.IEvent, \r\n            query: teams.ComposeExtensionQuery,\r\n            callback: (err: any, result: teams.IComposeExtensionResponse, statusCode: number) => void) => {\r\n                // check if this is the initialRun of the extension\r\n                if (query && query.parameters && query.parameters[0].name === 'initialRun') {\r\n                    // initial run...we don't use this given huge list of symbols\r\n                }\r\n                else {\r\n                    // start by getting all stock symbols and then we will filter down by query text\r\n                    StockSymbolController.getSymbols().then((data:Array<StockSymbol>) => {\r\n                        // get query parameters for paging and the query text\r\n                        let q = (<any>query).parameters[0].value;\r\n                        let skip = (<any>query.queryOptions).skip;\r\n                        let cnt = (<any>query.queryOptions).count;\r\n                        let filtered:Array<StockSymbol> = data.filter(symbol => symbol.symbol.indexOf(q) == 0).splice(skip, cnt);\r\n                        \r\n                        // get the last trade, change price, and change pct for each results\r\n                        let symbols = filtered.map((a) => {return a.symbol;});\r\n                        /*\r\n                        let symbols_str = symbols.join('+');\r\n                        let uri = `http://finance.yahoo.com/d/quotes.csv?s=${symbols_str}&f=cl`\r\n                        request.get(uri, {}, (err, resp, body) => {\r\n                            // Parse the results as csv\r\n                            parse(resp.body, {}, (parse_error, output) => {\r\n                                // Add stock quotes to each result\r\n                                let attachments:any = [];\r\n                                for (var i = 0; i < filtered.length; i++) {\r\n                                    // skip bad symbols\r\n                                    if (output[i][0].indexOf('N/A') == -1) {\r\n                                        let change = output[i][0].split(' - ');\r\n                                        change[0] = change[0].replace('+', '');\r\n                                        change[1] = change[1].replace('%', '').replace('+', '');\r\n                                        let last = output[i][1].split(' - ');\r\n                                        last[1] = last[1].replace('<b>', '').replace('</b>', '');\r\n\r\n                                        // convert StockSymbol to full StockQuote\r\n                                        let quote = new StockQuote();\r\n                                        quote.symbol = filtered[i].symbol;\r\n                                        quote.name = filtered[i].company_name;\r\n                                        quote.current = +last[1];\r\n                                        quote.curr_change = +change[0];\r\n                                        quote.pct_change = +change[1]/100;\r\n                                        attachments.push(stocks.formatQuoteCard(quote).toAttachment());\r\n                                    }\r\n                                }\r\n\r\n                                // Return result response\r\n                                let response = teams.ComposeExtensionResponse.result('list')\r\n                                    .attachments(attachments)\r\n                                    .toResponse();\r\n                                callback(null, response, 200);\r\n                            });\r\n                        });\r\n                        */\r\n\r\n                        let symbols_str = symbols.join('%2C');\r\n                        let uri = `https://api.wsj.net/api/dylan/quotes/v2/comp/quoteByDialect?id=${symbols_str}&dialect=charting&needed=CompositeTrading%7CBluegrassChannels%7CCurrencySpecific&MaxInstrumentMatches=1&ckey=cecc4267a0&EntitlementToken=cecc4267a0194af89ca343805a3e57af`\r\n                        request.get(uri, { headers: { 'Accept': 'application/json' } }, (err, resp, body) => {\r\n                            var json = JSON.parse(body);\r\n\r\n                            // Add stock quotes to each result\r\n                            let attachments:any = [];\r\n                            for (var i = 0; i < filtered.length; i++) {\r\n                                // skip bad matches\r\n                                if (json.InstrumentResponses[i].Matches.length > 0) {\r\n                                    let stock = json.InstrumentResponses[i].Matches[0];\r\n                                    \r\n                                    let last = stock.CompositeTrading.Last.Price.Value;\r\n                                    let change = stock.CompositeTrading.NetChange.Value;\r\n                                    let change_pct = stock.CompositeTrading.ChangePercent;\r\n\r\n                                    // convert StockSymbol to full StockQuote\r\n                                    let quote = new StockQuote();\r\n                                    quote.symbol = filtered[i].symbol;\r\n                                    quote.name = filtered[i].company_name;\r\n                                    quote.current = +last;\r\n                                    quote.curr_change = +change;\r\n                                    quote.pct_change = +change_pct;\r\n                                    attachments.push(stocks.formatQuoteCard(quote).toAttachment());\r\n                                }\r\n                            }\r\n\r\n                            // Return result response\r\n                            let response = teams.ComposeExtensionResponse.result('list')\r\n                                .attachments(attachments)\r\n                                .toResponse();\r\n                            callback(null, response, 200);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * This is the default dialog used by the bot...it routes to other dialogs\r\n     * @param session \r\n     */\r\n    defaultDialog(session: builder.Session) {\r\n        let text = stocks.extractTextFromMessage(session.message);\r\n        console.log(text);\r\n        if (text.startsWith('help')) {\r\n            session.beginDialog('/help');\r\n            return;\r\n        } else if (text.startsWith('add ')) {\r\n            session.beginDialog('/add');\r\n            return;\r\n        } else if (text.startsWith('remove ')) {\r\n            session.beginDialog('/remove');\r\n            return;\r\n        } else if (text.startsWith('list')) {\r\n            session.beginDialog('/list');\r\n            return;\r\n        }   else {\r\n            session.beginDialog('/quote');\r\n            return;\r\n        }   \r\n    }\r\n\r\n    /**\r\n     * This is the list dialog used by the bot...it displays all stocks in portfolio\r\n     * @param session \r\n     */\r\n    listDialog(session: builder.Session) {\r\n        PortfolioAccount.ensureAccount(session).then((account:PortfolioAccount) => {\r\n            session.send(`Getting quotes for all ${account.stocks.length} stocks in your portfolio`);\r\n            var msg = new builder.Message(session);\r\n            msg.attachmentLayout(builder.AttachmentLayout.carousel);\r\n            let cnt = 0;\r\n            for (var i = 0; i < account.stocks.length; i++) {\r\n                stocks.getQuoteCard(account.stocks[i].symbol, session, account).then((card:builder.HeroCard) => {\r\n                    msg.addAttachment(card);\r\n                    cnt++;\r\n                    if (cnt == account.stocks.length) {\r\n                        session.send(msg);\r\n                        session.endDialog();\r\n                    }\r\n                }, (err) => {\r\n                    session.endDialog('Unknown stock symbol');\r\n                });\r\n            }\r\n        }, (err) => {\r\n            session.endDialog('Account not found');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This is the quote dialog of the bot that displays a stock quote for symbol\r\n     * @param session \r\n     */\r\n    quoteDialog(session: builder.Session) {\r\n        PortfolioAccount.ensureAccount(session).then((account:PortfolioAccount) => {\r\n            let symbol = stocks.extractTextFromMessage(session.message);\r\n            stocks.getQuoteCard(symbol, session, account).then((card:builder.HeroCard) => {\r\n                var msg = new builder.Message(session).addAttachment(card);\r\n                session.send(msg);\r\n                session.endDialog();\r\n            }, (err) => {\r\n                session.endDialog('Unknown stock symbol');\r\n            });\r\n        }, (err) => {\r\n            session.endDialog('Account not found');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This is the add stock dialog of the bot...it adds a stock to a portfolio\r\n     * @param session \r\n     */\r\n    addDialog(session: builder.Session) {\r\n        // ensure the conversation isn't null\r\n        if (session.message.address.conversation) {\r\n            PortfolioAccount.ensureAccount(session).then((account:PortfolioAccount) => {\r\n                let symbol = stocks.extractTextFromMessage(session.message).replace('add ', '').toUpperCase();\r\n                // ensure the stock isn't already there\r\n                let found:boolean = false;\r\n                for (var i = 0; i < account.stocks.length; i++) {\r\n                    if (account.stocks[i].symbol === symbol) {\r\n                        found = true;\r\n                        session.endDialog(`${symbol} was already in your portfolio`);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    let item:PortfolioItem = new PortfolioItem(symbol, session.message.user, new Date());\r\n                    account.stocks.push(item);\r\n                    account.update();\r\n\r\n                    // send the deep link to the item but only in a Channel\r\n                    if (session.message.sourceEvent.teamsChannelId) {\r\n                        let dl_context = encodeURIComponent(`{\"subEntityId\": \"${symbol}\", \"canvasUrl\": \"https://teamportfolio.azurewebsites.net/portfolioTab.html\", \"channelId\": \"${session.message.sourceEvent.teamsChannelId}\"}`);\r\n                        let deeplink = `https://teams.microsoft.com/l/entity/aa9e0885-7e73-489c-9734-740956c2d5e4/stocks?webUrl=${encodeURIComponent('https://www.cnbc.com/quotes/?symbol=' + symbol)}&label=${symbol}&context=${dl_context}`;\r\n                        session.send(`${symbol} has been added to the team portfolio and can be viewed <a href=\"${deeplink}\">here</a>`);\r\n                    }\r\n                    else {\r\n                        session.send(`${symbol} has been added to your portfolio`);\r\n                    }\r\n                    session.endDialog();\r\n                }\r\n            }, (err) => {\r\n                session.endDialog('Account not found');\r\n            });\r\n        }\r\n        else\r\n            session.endDialog('Bad message');\r\n    }\r\n\r\n    /**\r\n     * This is the remove dialog of the bot...it removes a stock from a portfolio\r\n     * @param session \r\n     */\r\n    removeDialog(session: builder.Session) {\r\n        // ensure the conversation isn't null\r\n        if (session.message.address.conversation) {\r\n            PortfolioAccount.ensureAccount(session).then((account:PortfolioAccount) => {\r\n                let symbol = stocks.extractTextFromMessage(session.message).replace('remove ', '').toUpperCase();\r\n                let msg:string = '';\r\n                for (var i = 0; i < account.stocks.length; i++) {\r\n                    // ensure stock is already there\r\n                    if (account.stocks[i].symbol === symbol) {\r\n                        account.stocks.splice(i, 1);\r\n                        msg = `${symbol} has been removed from your portfolio`;\r\n                        \r\n                        // update the account in the database\r\n                        account.update();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (msg === '')\r\n                    msg = `${symbol} was not in your portfolio`;\r\n                session.send(msg);\r\n                session.endDialog();\r\n            });\r\n        }\r\n        else\r\n            session.endDialog('Bad message');\r\n    }\r\n    \r\n    /**\r\n     * This is the help dialog of the bot\r\n     * @param session \r\n     */\r\n    helpDialog(session: builder.Session) {\r\n        let msg = stocks.getHelpMsg();\r\n        session.send(msg);\r\n        session.endDialog();\r\n    }\r\n\r\n    /**\r\n     * Extracts text only from messages, removing all entity references\r\n     * @param message builder.IMessage\r\n     */\r\n    private static extractTextFromMessage(message: builder.IMessage): string {\r\n        var s = (message.text) ? message.text : '';\r\n        if (message.entities) {\r\n            message.entities.forEach((ent: any) => {\r\n                s = s.replace(ent.text, '');\r\n            })            \r\n        }\r\n        return s.trim();\r\n    }\r\n\r\n    /**\r\n     * Builds a card for the stock\r\n     * @param quote StockQuote\r\n     */\r\n    private static getQuoteCard(symbol:string, session: builder.Session, account:PortfolioAccount) {\r\n        return new Promise((resolve, reject) => {\r\n            StockQuoteController.getQuote(symbol).then((quote:StockQuote) => {\r\n                let btn:builder.CardAction = builder.CardAction.imBack(session, `add ${quote.symbol}`, 'Add to portfolio');\r\n                for (var i = 0; i < account.stocks.length; i++) {\r\n                    if (account.stocks[i].symbol === symbol) {\r\n                        btn = builder.CardAction.imBack(session, `remove ${quote.symbol}`, 'Remove from portfolio');\r\n                    }\r\n                }\r\n                var card = stocks.formatQuoteCard(quote);\r\n\r\n                // send the deep link to the item but only in a Channel\r\n                if (session.message.sourceEvent.teamsChannelId) {\r\n                    let dl_context = encodeURIComponent(`{\"subEntityId\": \"${symbol}\", \"canvasUrl\": \"https://teamportfolio.azurewebsites.net/portfolioTab.html\", \"channelId\": \"${session.message.sourceEvent.teamsChannelId}\"}`);\r\n                    let deeplink = `https://teams.microsoft.com/l/entity/aa9e0885-7e73-489c-9734-740956c2d5e4/stocks?webUrl=${encodeURIComponent('https://www.cnbc.com/quotes/?symbol=' + symbol)}&label=${symbol}&context=${dl_context}`;\r\n                    card.buttons([\r\n                        btn,\r\n                        builder.CardAction.openUrl(session, deeplink, 'View details')\r\n                    ]);\r\n                }\r\n                else\r\n                    card.buttons([ btn ]);\r\n                resolve(card.toAttachment());\r\n            }, (err:any) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Formats a stock quote response\r\n     * @param quote StockQuote\r\n     */\r\n    private static formatQuoteCard(quote: StockQuote) : builder.HeroCard {\r\n        var color = (quote.curr_change == 0) ? 'black' : (quote.curr_change > 0) ? 'green' : 'red';\r\n        var symbol = (quote.curr_change == 0) ? 'UNCH' : (quote.curr_change > 0) ? '&#9650;' : '&#9660;';\r\n        return new builder.HeroCard()\r\n                .title(`${quote.symbol} ${quote.current}`)\r\n                .text(`<i><span style='color: ${color};'>${symbol} ${quote.curr_change.toFixed(3)} (${(quote.pct_change).toFixed(3)}%)</span><br/>${quote.name}</i>`);\r\n    }\r\n\r\n    private static getHelpMsg() {\r\n        let msg = \"The Stocks app for Microsoft Teams allows you to lookup near real-time stock information and build personal and team portfolios. Here are some of the commands you can send me:\";\r\n        msg += \"<p><b>Command</b>: {symbol}<br/><b>Description</b>: Displays real-time quote for specified stock symbol<br/><b>Example</b>: @Stocks MSFT</p>\";\r\n        msg += \"<p><b>Command</b>: detail {symbol}<br/><b>Description</b>: Displays detailed real-time quote for specified stock symbol<br/><b>Example</b>: @Stocks detail MSFT</p>\";\r\n        msg += \"<p><b>Command</b>: add {symbol}<br/><b>Description</b>: Adds the specified stock to portfolio<br/><b>Example</b>: @Stocks add MSFT</p>\";\r\n        msg += \"<p><b>Command</b>: remove {symbol}<br/><b>Description</b>: Removed the specified stock from portfolio<br/><b>Example</b>: @Stocks remove MSFT</p>\";\r\n        msg += \"<p><b>Command</b>: list<br/><b>Description</b>: Lists all stocks in the portfolio<br/><b>Example</b>: @Stocks list</p>\";\r\n        return msg;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/stocks.ts","module.exports = require(\"applicationinsights\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"applicationinsights\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"botbuilder\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botbuilder\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 25\n// module chunks = 0"],"sourceRoot":""}